{
	// Place your production workspace snippets here. Each snippet is defined under a snippet name and has a scope, prefix, body and 
	// description. Add comma separated ids of the languages where the snippet is applicable in the scope field. If scope 
	// is left empty or omitted, the snippet gets applied to all languages. The prefix is what is 
	// used to trigger the snippet and the body will be expanded and inserted. Possible variables are: 
	// $1, $2 for tab stops, $0 for the final cursor position, and ${1:label}, ${2:another} for placeholders. 
	// Placeholders with the same ids are connected.
	// Example:
	// "Print to console": {
	// 	"scope": "javascript,typescript",
	// 	"prefix": "log",
	// 	"body": [
	// 		"console.log('$1');",
	// 		"$2"
	// 	],
	// 	"description": "Log output to console"
	// }
	"Create custom react function component": {
		"scope": "typescript, typescriptreact",
		"prefix": "cfc",
		"body": [
			"import { classNames } from 'shared/lib/classNames/classNames'",
			"import cl from './${TM_FILENAME_BASE}.module.scss';",
			"",
			"import type { PropsWithChildren } from 'react';",
			"",
			"interface ${TM_FILENAME_BASE}Props {",
			"\tclassName?: string;",
			"}",
			"",
			"export function ${TM_FILENAME_BASE}(props: PropsWithChildren<${TM_FILENAME_BASE}Props>) {",
			"\tconst { className } = props;",
			"",
			"\treturn (",
			"\t\t<div ",
        	"\t\t\tclassName={classNames(cl.${TM_FILENAME_BASE}, {}, [className])}",
    		"\t\t>",
			"\t\t\t",
			"\t\t\t",
    		"\t\t</div>",
			"\t)",
			"}",
		],
		"description": "React-компонент по умолчанию. Импортируется scss-модуль и функция для работы с классами classnames."
	}
}